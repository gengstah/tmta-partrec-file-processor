apply plugin: 'java'
apply plugin: 'eclipse'

manifest.mainAttributes("Main-Class" : "services.tman.Main")

def springVersion = "3.2.2.RELEASE"

repositories {
	mavenCentral()
}

dependencies {
	compile "commons-collections:commons-collections:3.2"
	compile "log4j:log4j:1.2.16"
	
	compile "org.springframework:spring-core:$springVersion"
	compile "org.springframework:spring-context:$springVersion"
	compile "org.springframework:spring-context-support:$springVersion"
	compile "org.springframework:spring-jdbc:$springVersion"
	
	compile "org.quartz-scheduler:quartz:1.8.6"
	
	testCompile "org.mockito:mockito-all:1.9.5"
	
	compile "commons-dbcp:commons-dbcp:20030825.184428"
	
	compile "org.slf4j:slf4j-api:1.7.2"
	compile "org.slf4j:slf4j-log4j12:1.7.2"
	
	testCompile "junit:junit:4.+"
	
	runtime "commons-pool:commons-pool:20030825.183949"
	runtime files("C:/Program Files/IBM/SQLLIB/java/db2jcc.jar", "C:/Program Files/IBM/SQLLIB/java/db2jcc_license_cu.jar")
}

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
    gradleVersion = '1.4'
}

task includeClassPaths() << {
	def jars = ""
	
	configurations.runtime.each { File f -> jars = jars + " lib\\" + f.name }
	
	manifest.mainAttributes("Class-Path" : "$jars")
}

task copyToLib( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.runtime
}

jar { dependsOn copyToLib }
copyToLib { dependsOn includeClassPaths }

task "create-dirs" << {
   sourceSets*.java.srcDirs*.each { it.mkdirs() }
   sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}